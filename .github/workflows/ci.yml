name: CI

on: [push,pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.2']

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      CODEX_MODEL: gpt-3.5-turbo-instruct

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pdo_sqlite

      - name: Allow TYPO3 Composer plugins
        run: |
          composer config --no-plugins allow-plugins.typo3/class-alias-loader true
          composer config --no-plugins allow-plugins.typo3/cms-composer-installers true

      - name: Install PHP dependencies (inkl. dev)
        run: composer install --no-interaction --optimize-autoloader

      - name: Initialize SQLite test DB
        run: |
          mkdir -p var
          touch var/tests.sqlite

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --level=7 Classes/

      - name: Run PHPCS (PSR-12)
        run: vendor/bin/phpcs --standard=PSR12 -p Classes/

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testdox

      - name: Install OpenAI CLI & verify auth
        continue-on-error: true
        run: |
          pip install --quiet openai==1.3.9 httpx==0.27.0
          openai api models.list > /dev/null
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Codex Conformity Check
        continue-on-error: true
        run: |
          mkdir -p ci
          openai api completions.create \
            -m "$CODEX_MODEL" \
            --prompt "$(cat ci/prompts/verify_conformity.txt)" \
            --temperature 0.0 \
            --max-tokens 256 \
            > ci/codex-report.json

      - name: Upload Codex report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codex-report
          path: ci/codex-report.json